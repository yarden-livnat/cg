{"version":3,"sources":["info.es6"],"names":[],"mappings":"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","file":"info.js","sourcesContent":["/**\n * Created by yarden on 7/21/15.\n */\n\nimport * as d3 from 'd3'\nimport * as postal from 'postal'\n\nimport {pathogens_duration} from './config'\nimport * as data from './data'\nimport * as table from './components/table'\nimport * as chart from './components/chart'\n\n//import * as $ from 'jquery'\n//import 'bootstrap-multiselect'\n\nexport default function(opt) {\n  const MIN_Y = 5;\n  const CHART_MAX_WIDTH = 500;\n\n  let dateFormat = d3.time.format('%Y-%m-%d');\n\n  let selection;\n\n  let tagsTable = table().el('#tags-table')\n    .columns([{title: 'Tag', name: 'name'}, 'n']);\n\n  let selectedTable = table().el('#selected-table')\n    .columns([{title: 'Selected', name: 'name'}, 'n']);\n\n  let categoryTable = table().el('#category-table')\n    .columns(['category', 'n']);\n\n  let systemTable = table().el('#system-table')\n    .columns(['system', 'n']);\n\n  let summaryChart = chart().el('#summary-chart');\n  let selectedChart = chart().el('#selected-chart');\n\n  let charts = new Map([\n    ['#summary-chart', summaryChart],\n    ['#selected-chart', selectedChart],\n  ]);\n\n  let pathogens = new Map();\n\n  function init() {\n    postal.subscribe({channel: 'data', topic: 'changed', callback: dataChanged});\n\n    d3.select('#pathogens').on('change', selectPathogen);\n\n    d3.select('#pathogens').selectAll('option')\n      .data(data.pathogens)\n      .enter()\n        .append('option')\n          .attr('value', d => d.name)\n          .text(d => d.name);\n\n    //$('#pathogens').multiselect();\n  }\n\n  function selectPathogen() {\n    let id = 'chart-'+this.value;\n    if (pathogens.has(this.value)) {\n      pathogens.delete(this.value);\n      d3.select('#pathogens-area').select('#chart-'+this.value).remove();\n    } else {\n      let div = d3.select('#pathogens-area').append('div')\n        .attr('id', 'chart-'+this.value);\n      let c = chart().el(div).title(this.value);\n      pathogens.set(this.value, c);\n      updatePathogens(this.value);\n    }\n  }\n\n  function updatePathogens(names) {\n    let from = d3.time.day.offset(d3.time.month.offset(data.toDate, -pathogens_duration), 1);\n    let to = data.toDate;\n    let range = d3.time.day.range(from, to);\n    let scale = d3.time.scale()\n      .domain([from, to])\n      .rangeRound([0, range.length-1]);\n\n    data.fetchPathogens([names], from, data.toDate)\n      .then(function(d) {\n        for (let entry of d) {\n          let positive = range.map(function (d) { return {date: d, value: 0, items: []}; });\n          let negative = range.map(function (d) { return {date: d, value: 0, items: []}; });\n\n          for (let item of entry.rows) {\n            item.date = dateFormat.parse(item.date);\n            let i = scale(item.date);\n            let bins = item.positive ? positive : negative;\n            bins[i].value++;\n            bins[i].items.push(item);\n          }\n\n          let series = [\n            {\n              label: 'positive',\n              color: 'red',\n              type: 'line',\n              marker: 'solid',\n              values: positive\n            //}\n            //{\n            //  label: 'negative',\n            //  color: 'green',\n            //  type: 'line',\n            //  marker: 'solid',\n            //  values: negative\n            }];\n          pathogens.get(entry.name).data(series);\n        }\n      })\n      .catch(function(reason) {\n        console.error('error: ', reason);\n      });\n  }\n\n  function dataChanged() {\n    tagsTable.data(data.tags.map(tag => {\n      return {\n        name: tag.concept.label,\n        n: tag.items.length\n      }\n    }));\n\n    summaryChart.data(binData(data.domain));\n  }\n\n  function binData(items) {\n    let f = d3.time.day.ceil(data.fromDate),\n        t = d3.time.day.offset(d3.time.day.ceil(data.toDate), 1),\n        range = d3.time.day.range(f, t),\n        scale = d3.time.scale()\n          .domain([f, t])\n          .rangeRound([0, Math.max(range.length, MIN_Y)]);  // hack: rangeRound still give fraction if range is 0-1\n\n    let bins = range.map(function (day) { return {date: day, value: 0, items: []}; });\n    for (let item of items) {\n      let i = scale(item.date);\n      bins[i].value++;\n      bins[i].items.push(item);\n    }\n\n    return [{label: 'data', color: 'black', values: bins}];\n  }\n\n  function selectionChanged() {\n    let from = d3.time.day.ceil(data.fromDate),\n        to = d3.time.day.offset(d3.time.day.ceil(data.toDate), 1),\n        range = d3.time.day.range(from, to),\n        scale = d3.time.scale()\n          .domain([from, to])\n          .rangeRound([0, Math.max(range.length, MIN_Y)]);  // hack: rangeRound still give fraction if range is 0-1\n\n    let selectedSeries = [];\n\n    for (let tag of selection.tags()) {\n      let bins = histogram(tag.items, range, scale);\n      selectedSeries.push({\n        label: tag.concept.label,\n        color: tag.color,\n        type: 'line',\n        marker: 'solid',\n        values: bins\n      });\n    }\n\n    for (let tag of selection.excluded()) {\n      let bins = histogram(tag.items, range, scale);\n      selectedSeries.push({\n        label: tag.concept.label,\n        color: tag.color,\n        type: 'line',\n        marker: 'dash',\n        values: bins\n      });\n    }\n\n    //selectedSeries.push({\n    //  label: tag.concept.label,\n    //  color: tag.color,\n    //  type: 'line',\n    //  values: histogram(selection.selectedItems(), range)\n    //});\n\n    selectedChart.data(selectedSeries);\n\n    let selected  = [];\n    let categories = new Map();\n    let systems = new Map();\n    for (let tag of selection.tags()) {\n      selected.push({name:tag.concept.label, n: tag.items.length, tag:tag});\n\n      let entry = categories.get(tag.concept.category);\n      if (!entry) {\n        entry = {category: tag.concept.category, n: 0};\n        categories.set(tag.concept.category, entry);\n      }\n      entry.n++;\n\n      entry = systems.get(tag.concept.system);\n      if (!entry) {\n        entry = {system: tag.concept.system, n: 0};\n        systems.set(tag.concept.system, entry);\n      }\n      entry.n++;\n    }\n\n    selectedTable.data(selected);\n    categoryTable.data(toArray(categories.values()));\n    systemTable.data(toArray(systems.values()));\n  }\n\n  function toArray(iter) {\n    let a = [];\n    for (let entry of iter) {\n      a.push(entry);\n    }\n    return a;\n  }\n  function histogram(items, range, scale) {\n    let bins = range.map(function (d) { return {date: d, value: 0, items: []}; });\n    for (let item of items) {\n      let i = scale(item.date);\n      bins[i].value++;\n      bins[i].items.push(item);\n    }\n    return bins;\n  }\n\n  let api = {\n  };\n\n  api.init = function() {\n    init();\n    return this;\n  };\n\n  api.selection = function(s) {\n    selection = s;\n    selection.on('changed', selectionChanged);\n    return this;\n  };\n\n  api.resize = function() {\n    for (let [name, chart] of charts) {\n      let w = parseInt(d3.select(name).style('width'));\n      let h = parseInt(d3.select(name).style('height'));\n      chart.resize([w, h]);\n    }\n\n    for (let [name, chart] of pathogens) {\n      let w = parseInt(d3.select(name).style('width'));\n      let h = parseInt(d3.select(name).style('height'));\n      chart.resize([w, h]);\n    }\n\n    return this;\n  };\n\n  return api;\n}"]}