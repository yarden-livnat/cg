{"version":3,"sources":["info.es6"],"names":[],"mappings":"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","file":"info.js","sourcesContent":["/**\n * Created by yarden on 7/21/15.\n */\n\nimport * as data from 'services/data'\nimport * as table from 'components/table'\nimport * as chart from 'components/chart'\nimport * as postal from 'postal'\n\nexport default function(opt) {\n  const MIN_Y = 5;\n  const CHART_MAX_WIDTH = 500;\n\n  let selection;\n\n  let tagsTable = table().el(d3.select('#tags-table'))\n    .columns([{title: 'Tag', name: 'name'}, 'n']);\n\n  let summaryChart = chart().el('#summary-chart');\n  let selectedChart = chart().el('#selected-chart');\n\n  function init() {\n    postal.subscribe({channel:'data', topic:'changed', callback: dataChanged});\n  }\n\n  function dataChanged() {\n    tagsTable.data(data.tags.map(tag => {\n      return {\n        name: tag.concept.label,\n        n: tag.items.length\n      }\n    }));\n\n    summaryChart.data(binData(data.domain));\n  }\n\n  function binData(items) {\n    let f = d3.time.day.ceil(data.fromDate),\n        t = d3.time.day.offset(d3.time.day.ceil(data.toDate), 1),\n        range = d3.time.day.range(f, t),\n        scale = d3.time.scale()\n          .domain([f, t])\n          .rangeRound([0, Math.max(range.length, MIN_Y)]);  // hack: rangeRound still give fraction if range is 0-1\n\n    let bins = range.map(function (day) { return {date: day, value: 0, items: []}; });\n    for (let item of items) {\n      let i = scale(item.date);\n      bins[i].value++;\n      bins[i].items.push(item);\n    }\n\n    return [{label: 'data', values: bins}];\n  }\n\n  function selectionChanged() {\n    let from = d3.time.day.ceil(data.fromDate),\n        to = d3.time.day.offset(d3.time.day.ceil(data.toDate), 1),\n        range = d3.time.day.range(from, to),\n        scale = d3.time.scale()\n          .domain([from, to])\n          .rangeRound([0, Math.max(range.length, MIN_Y)]);  // hack: rangeRound still give fraction if range is 0-1\n\n    let series = [];\n    for (let tag of selection.tags()) {\n      let bins = range.map(function (day) { return {date: day, value: 0, items: []}; });\n      for (let item of tag.items) {\n        let i = scale(item.date);\n        bins[i].value++;\n        bins[i].items.push(item);\n      }\n      series.push({\n        label: tag.concept.label,\n        values: bins\n      });\n    }\n\n    selectedChart.data(series);\n  }\n\n\n  let api = {};\n\n  api.init = function() {\n    init();\n    return this;\n  };\n\n  api.selection = function(s) {\n    selection = s;\n    selection.on('changed', selectionChanged);\n    return this;\n  };\n\n  api.resize = function(size) {\n    let w = Math.min((size[0] - parseInt(d3.select('#tags-table').style('width')))/2, CHART_MAX_WIDTH) - 10;\n\n    d3.select('#summary-chart')\n      .attr('width', w)\n      .attr('height', size[1]);\n    summaryChart.resize([w, size[1]]);\n\n    d3.select('#selected-chart')\n      .attr('width', w)\n      .attr('height', size[1]);\n    selectedChart.resize([w, size[1]]);\n\n    return this;\n  };\n\n  return api;\n}"]}