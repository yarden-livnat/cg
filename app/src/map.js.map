{"version":3,"sources":["map.es6"],"names":[],"mappings":"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","file":"map.js","sourcesContent":["/**\n * Created by yarden on 7/3/15.\n */\n\nimport * as d3 from 'd3';\nimport * as L from 'leaflet';\nimport * as postal from 'postal';\n\nimport {MAP_DEFAULTS} from './config';\n\nexport default function (opt) {\n\n  const AREA_ALPHA = 0.6;\n  const POPULATION_FACTOR = 1000;\n  const DURATION = 500;\n\n  const BOUNDARY_HIGHLIGHT_WIDTH = '1.5px';\n  const BOUNDARY_ACTIVE_WIDTH = '0.5px';\n  const BOUNDARY_NON_ACTIVE_WIDTH = '0';\n\n  const BOUNDARY_SELECTED_COLOR = 'blue';\n  const BOUNDARY_ACTIVE_COLOR = '#333';\n  const BOUNDARY_NON_ACTIVE_COLOR = '#333';\n\n  let format = d3.format('4.2f');\n\n  let colorScale = d3.interpolateLab('#fff', '#f00');\n  let width, height;\n  let population = new Map();\n  let selection;\n  let zipcodes = new Map();\n  let active = new Map();\n  let current = new Map();\n  let svg, svgContainer;\n  let selectedZipcodes = new Set();\n  let selectionFilter = Filter();\n\n  //let options = Object.assign({}, MAP_DEFAULTS, opt);\n  let options = MAP_DEFAULTS;\n  let map = new L.Map('map')\n    .addLayer(L.tileLayer(options.mapbox.url, options.mapbox.opt))\n    .setView(options.center, options.zoom);\n\n  let transform = d3.geo.transform({point: projectPoint});\n  let path = d3.geo.path().projection(transform);\n\n  /* Initialize the SVG layer */\n  map._initPathRoot();\n\n  svgContainer = d3.select('#map').select('svg');\n  svg = svgContainer.append('g');\n\n\n\n  function init() {\n    d3.json(options.zipcodes_file, (error, collection) => {\n      if (error) {\n        // Todo: better error handling\n        console.error(error);\n        return;\n      }\n\n      collection.features.forEach(d => {\n        zipcodes.set(d.properties.Zip_Code, d);\n        d.state = {n: 0, boundary_color: BOUNDARY_NON_ACTIVE_COLOR, boundary_width: BOUNDARY_NON_ACTIVE_WIDTH};\n      });\n\n      let feature = svg.selectAll(\"path\")\n        .data(collection.features, function(d) { return d.properties.Zip_Code;})\n        .enter()\n          .append(\"path\")\n          .on('mouseenter', d => { showInfo(d.properties.Zip_Code, true); })\n          .on('mouseout', d => { showInfo(d.properties.Zip_Code, false); })\n          .on('click', d => { selectZipcode(d.properties.Zip_Code, d3.event.metaKey);});\n\n      function update() {\n        feature.attr(\"d\", path);\n      }\n\n      map.on('viewreset', update);\n      update();\n    });\n  }\n\n  function showInfo(zipcode, show) {\n    let cases = current.get(zipcode);\n    if (show && cases) {\n      let rate = format(cases * POPULATION_FACTOR/population.get(zipcode));\n      d3.select('#map-info').text(`Zipcode: ${zipcode} cases:${cases}  rate:${rate}`);\n    } else {\n      d3.select('#map-info').text('');\n    }\n\n    let feature = zipcodes.get(zipcode);\n    feature.state.highlight = show;\n    feature.state.boundary_width = show && cases ? BOUNDARY_HIGHLIGHT_WIDTH : cases ? BOUNDARY_ACTIVE_WIDTH : BOUNDARY_NON_ACTIVE_WIDTH;\n\n    svg.selectAll('path').filter( d => { return d.properties.Zip_Code == zipcode;})\n      .style('stroke-width', feature.state.boundary_width);\n  }\n\n  function selectZipcode(zipcode, append) {\n    d3.event.preventDefault();\n\n    let updated = new Set();\n    let active = selectedZipcodes.has(zipcode);\n    if (append) {\n      if (active) selectedZipcodes.delete(zipcode);\n      else  selectedZipcodes.add(zipcode);\n\n      update(zipcode, !active);\n    } else {\n      for (let z of selectedZipcodes) {\n        update(z, false);\n      }\n      selectedZipcodes.clear();\n      if (!active) {\n        selectedZipcodes.add(zipcode);\n        update(zipcode, true);\n      }\n    }\n\n    console.log('selected: '+selectedZipcodes);\n    svg.selectAll('path').filter( d => updated.has(d.properties.Zip_Code) )\n      .each(d => { console.log(d+': '+d.state.boundary_color);})\n      .style('stroke', d => d.state.boundary_color );\n\n    selectionFilter.domain(selectedZipcodes);\n\n    function update(zipcode, on) {\n      let feature = zipcodes.get(zipcode);\n      feature.state.selected = on;\n      feature.state.boundary_color = on ? BOUNDARY_SELECTED_COLOR :\n        feature.n > 0 ? BOUNDARY_ACTIVE_COLOR :\n          BOUNDARY_NON_ACTIVE_COLOR;\n      updated.add(zipcode);\n    }\n  }\n\n  function projectPoint(x, y) {\n    let point = map.latLngToLayerPoint(new L.LatLng(y, x));\n    this.stream.point(point.x, point.y);\n  }\n\n  function assignColor(zipcode, n) {\n    let f =  Math.min(n * POPULATION_FACTOR/population.get(zipcode), 1);\n    return colorScale(f);\n  }\n\n  function selectionChanged() {\n    current = new Map();\n    selection.domain.forEach(enc => {\n      if (population.has(enc.zipcode)) {\n        let count = current.get(enc.zipcode) || 0;\n        current.set(enc.zipcode, count+1);\n      }\n    });\n\n    let update = [];\n    current.forEach((n, zipcode) => {\n      let feature = zipcodes.get(zipcode);\n      if (feature) {\n        feature.state.alpha = AREA_ALPHA;\n        feature.state.color = assignColor(zipcode, n);\n        feature.state.active = true;\n        feature.state.boundary_width = BOUNDARY_ACTIVE_WIDTH;\n        feature.state.boundary_color = feature.state.selected ? BOUNDARY_SELECTED_COLOR : BOUNDARY_ACTIVE_COLOR;\n        update.push(feature);\n      }\n    });\n    active.forEach((n, zipcode) => {\n      if (!current.has(zipcode)) {\n        let feature = zipcodes.get(zipcode);\n        feature.state.color = '#fff';\n        feature.state.alpha = 0;\n        feature.state.active = false;\n        feature.state.boundary_width = BOUNDARY_NON_ACTIVE_WIDTH;\n        update.push(feature);\n      }\n    });\n\n    let s = svg.selectAll('path')\n      .data(update, d => {return d.properties.Zip_Code;})\n      .transition()\n        .duration(DURATION)\n        .style('fill-opacity', d => { return d.state.alpha})\n        .style('fill', d => { return d.state.color})\n        .style('stroke', d => { return d.state.boundary_color; })\n        .style('stroke-width', d => { return d.state.boundary_width; });\n\n    active = current;\n  }\n\n  function Filter() {\n    let dispatch = d3.dispatch('change');\n    let items;\n\n    let f = function(list) {\n      return !items || items.size == 0 ? list: list.filter( item => items.has(item.zipcode));\n    };\n\n    f.domain = function(d) {\n      items = d;\n      dispatch.change();\n    };\n\n    f.on = function(type, cb) {\n      dispatch.on(type, cb);\n    };\n\n    return f;\n  }\n\n  return {\n    init() { init(); },\n\n    population (map) {\n      population = map;\n      return this;\n    },\n\n    selection(s) {\n      selection = s;\n      selection.addFilter(selectionFilter, 'map.filter');\n      selection.on('changed.map', selectionChanged);\n     return this;\n    },\n\n    resize(w, h) {\n      width = w;\n      height = h;\n      svgContainer.attr(\"width\", w).attr(\"height\", h);\n      return this;\n    }\n  };\n}\n"]}