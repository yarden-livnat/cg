{"version":3,"sources":["info-charts.es6"],"names":[],"mappings":"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","file":"info-charts.js","sourcesContent":["/**\n * Created by yarden on 8/6/15.\n */\n\nimport * as d3 from 'd3'\nimport * as postal from 'postal'\n\nimport {pathogens_duration} from '../config'\nimport * as data from '../data'\nimport * as chart from '../components/chart'\n\n\nexport default function(opt) {\n  const MIN_Y = 5;\n  const CHART_MAX_WIDTH = 500;\n\n  let dateFormat = d3.time.format('%Y-%m-%d');\n\n  let selection;\n\n  let summaryChart = chart().el('#summary-chart');\n  let selectedChart = chart().el('#selected-chart');\n\n  let charts = new Map([\n    ['#summary-chart', summaryChart],\n    ['#selected-chart', selectedChart],\n  ]);\n\n  let pathogens = new Map();\n\n  let detectors = [];\n\n  function init() {\n    postal.subscribe({channel: 'data', topic: 'changed', callback: dataChanged});\n\n    /* pathogens */\n    let items = d3.select('#pathogens').select(\"ul\").selectAll('li')\n      .data(data.pathogens)\n      .enter()\n      .append('li');\n\n    items.append('input')\n      .attr('type', 'checkbox')\n      .attr('value', d => d.name)\n      .on(\"change\", function() {\n        selectPathogen(this.value, this.checked);\n      });\n\n    items.append('span')\n      .text(d => d.name);\n\n\n    let menu = d3.select('#pathogens .items');\n    d3.select('#pathogens').select('.anchor').on('click', function() {\n      if (menu.classed('visible')) {\n        menu.classed('visible', false).style('display', 'none');\n      } else {\n        menu.classed('visible', true).style('display', 'block');\n      }\n    });\n\n    menu.on('blur', function() {\n      menu.classed('visible', false).style('display', 'none');\n    });\n\n    /* detectors */\n    d3.select('#detectors-charts').selectAll('div')\n      .data(data.detectors)\n      .enter()\n      .append('div')\n      .attr('id', d => 'detector-'+d.name);\n\n    for (let d of data.detectors) {\n      let c = chart().el('#detector-'+d.name).title(d.name).scale(d3.scale.linear());\n      let detector = { name: d.name, chart: c, data:[] };\n      detectors.push(detector);\n    }\n  }\n\n  function dataChanged() {\n    summaryChart.data(binData(data.domain));\n\n    for (let name of pathogens.keys()) { updatePathogens(name); }\n\n    data.fetch('detectors', detectors.map(d => d.name), data.fromDate, data.toDate)\n      .then( d => {\n        for (let entry of d) {\n          for (let detector of detectors) {\n            if (detector.name == entry.name) {\n              detector.data = entry.rows;\n              //detector.data.sort( d => d.id );\n              break;\n            }\n          }\n        }\n        updateDetectors();\n      })\n      .catch( e => { console.error('Detectors error:', e); });\n  }\n\n  function binData(items) {\n    let f = d3.time.day.ceil(data.fromDate),\n        t = d3.time.day.offset(d3.time.day.ceil(data.toDate), 1),\n        range = d3.time.day.range(f, t),\n        scale = d3.time.scale()\n          .domain([f, t])\n          .rangeRound([0, Math.max(range.length, MIN_Y)]);  // hack: rangeRound still give fraction if range is 0-1\n\n    let bins = range.map(function (day) { return {x: day, value: 0, items: []}; });\n    for (let item of items) {\n      let i = scale(item.date);\n      bins[i].value++;\n      bins[i].items.push(item);\n    }\n\n    return [{label: 'data', color: 'black', values: bins}];\n  }\n\n  function selectionChanged() {\n    let from  = d3.time.day.ceil(data.fromDate),\n        to    = d3.time.day.offset(d3.time.day.ceil(data.toDate), 1),\n        range = d3.time.day.range(from, to),\n        scale = d3.time.scale()\n          .domain([from, to])\n          .rangeRound([0, Math.max(range.length, MIN_Y)]);  // hack: rangeRound still give fraction if range is 0-1\n\n    let selectedSeries = [];\n\n    for(let tag of selection.tags()) {\n      let bins = histogram(tag.items, range, scale);\n      selectedSeries.push({\n          label:  tag.concept.label,\n          color:  tag.color,\n          type:   'line',\n          marker: 'solid',\n          values: bins\n        }\n      );\n    }\n\n    for(let tag of selection.excluded()) {\n      let bins = histogram(tag.items, range, scale);\n      selectedSeries.push({\n          label:  tag.concept.label,\n          color:  tag.color,\n          type:   'line',\n          marker: 'dash',\n          values: bins\n        }\n      );\n    }\n\n    //selectedSeries.push({\n    //  label: tag.concept.label,\n    //  color: tag.color,\n    //  type: 'line',\n    //  values: histogram(selection.selectedItems(), range)\n    //});\n\n    selectedChart.data(selectedSeries);\n  }\n\n  function selectPathogen(name, show) {\n    if (show) {\n      let div = d3.select('#pathogens-charts').append('div')\n        .attr('id', 'chart-'+name);\n      let c = chart().el(div).title(name);\n      pathogens.set(name, c);\n      updatePathogens(name);\n    }\n    else {\n      d3.select('#pathogens-charts').select('#chart-'+name).remove();\n      pathogens.delete(name);\n    }\n  }\n\n  function updatePathogens(names) {\n    let from = d3.time.day.offset(d3.time.month.offset(data.toDate, -pathogens_duration), 1);\n    let to = data.toDate;\n    let range = d3.time.day.range(from, to);\n    let scale = d3.time.scale()\n      .domain([from, to])\n      .rangeRound([0, range.length-1]);\n\n    data.fetch('pathogens', [names], from, data.toDate)\n      .then(function(d) {\n        for (let entry of d) {\n          let positive = range.map(function (d) { return {x: d, value: 0, items: []}; });\n          let negative = range.map(function (d) { return {x: d, value: 0, items: []}; });\n\n          for (let item of entry.rows) {\n            item.date = dateFormat.parse(item.date);\n            let i = scale(item.date);\n            let bins = item.positive ? positive : negative;\n            bins[i].value++;\n            bins[i].items.push(item);\n          }\n\n          let series = [\n            {\n              label: 'positive',\n              color: 'red',\n              type: 'line',\n              marker: 'solid',\n              values: positive\n              //}\n              //{\n              //  label: 'negative',\n              //  color: 'green',\n              //  type: 'line',\n              //  marker: 'solid',\n              //  values: negative\n            }];\n          pathogens.get(entry.name).data(series);\n        }\n      })\n      .catch(function(reason) {\n        console.error('error: ', reason);\n      });\n  }\n\n  function updateDetectors() {\n    let domain = selection.domain; // check that it is sorted by id\n    let n = domain.length;\n\n    for (let detector of detectors) {\n      let prob = [], similar = [];\n      let i = 0;\n      for (let j=0; j<100; j++) {\n        prob.push({x: j/100, value: 0, items:[]});\n        similar.push({x: j/100, value: 0, items: []});\n      }\n\n      let found = 0;\n      for (let entry of detector.data) {\n        while (i < n && domain[i].id < entry.id) i++;\n        if (i == n) break;\n        if (domain[i].id == entry.id) {\n          found++;\n          let p = prob[Math.min(Math.floor(entry.prob*100), 99)];\n          p.value++;\n          p.items.push(entry);\n\n          let s = similar[Math.min(Math.floor(entry.similar*100), 99)];\n          s.value ++;\n          s.items.push(entry);\n\n          i++;\n        }\n      }\n\n      prob[0].value = 0;\n      similar[0].value = 0;\n      let series = [{\n        label: 'prob',\n        color: 'black',\n        type: 'line',\n        marker: 'solid',\n        values: prob\n      },\n        {\n          label: 'similar',\n          color: 'gray',\n          type: 'line',\n          marker: 'dash',\n          values: similar\n        }];\n      detector.chart.data(series);\n    }\n  }\n\n  function toArray(iter) {\n    let a = [];\n    for (let entry of iter) {\n      a.push(entry);\n    }\n    return a;\n  }\n  function histogram(items, range, scale) {\n    let bins = range.map(function (d) { return {x: d, value: 0, items: []}; });\n    for (let item of items) {\n      let i = scale(item.date);\n      bins[i].value++;\n      bins[i].items.push(item);\n    }\n    return bins;\n  }\n\n  return {\n    init() {\n      init();\n      return this;\n    },\n\n    selection(s) {\n      selection = s;\n      selection.on('changed.info.charts', selectionChanged);\n      return this;\n    },\n\n    resize() {\n      let name, c;\n      for([name, c] of charts) {\n        let w = parseInt(d3.select(name).style('width'));\n        let h = parseInt(d3.select(name).style('height'));\n        c.resize([w, h]);\n      }\n\n      for([name, c] of pathogens) {\n        let w = parseInt(d3.select('#chart-' + name).style('width'));\n        let h = parseInt(d3.select('#chart-' + name).style('height'));\n        c.resize([w, h]);\n      }\n\n      let h = parseInt(d3.select('#info-area').style('height')) - parseInt(d3.select('#pathogens').style('height'));\n      d3.select('#pathogens-charts').style('max-height', h + 'px');\n      return this;\n    }\n  }\n}"]}