{"version":3,"sources":["data.es6"],"names":[],"mappings":"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","file":"data.js","sourcesContent":["/**\n * Created by yarden on 7/13/15.\n */\nimport * as d3 from 'd3'\nimport * as queue from 'queue'\nimport * as postal from 'postal'\n\nlet dateFormat = d3.time.format('%Y-%m-%d');\nlet post = postal.channel('data');\n\nlet items = new Map();\nlet kb = new Map();\n\nexport let fromDate = Date.now();\nexport let toDate = Date.now();\n\nexport let tags = [];\nexport let domain = [];\nexport let population = new Map();\n\nlet ignore_tags = [\"conjunctivitis\"];\nlet ignore = [];\n\nexport function init() {\n  queue()\n    .defer(d3.json, '/data/kb')\n    .defer(d3.csv, '/data/population')\n    .await( (err, kbData, popData) => {\n      kbData.forEach(d => {\n        d.label = d.details == '' ? d.name : d.name+'['+d.details+']';\n        kb.set(d.id, d);\n        if (ignore_tags.indexOf(d.name) != -1) ignore.push(d.id);\n      });\n\n      popData.forEach(function(d) { population.set(d.zipcode, +d.population);});\n      post.publish('ready');\n    });\n}\n\nexport function fetchAssociations(params) {\n\n  let uri = '/query?';\n  uri += 'from='+params.from;\n  uri += '&to='+params.to;\n\n  d3.json(uri, function(err, data) {\n    tags = [];\n    domain = data.enc;\n\n    let map = new Map();\n\n    data.enc.forEach(d  => {\n      d.date = dateFormat.parse(d.date);\n      items.set(d.id, d);\n    });\n\n    data.associations.forEach(d => {\n      if (ignore.indexOf(d.tag_id) == -1) {\n        let entry = map.get(d.tag_id);\n        if (!entry) {\n          entry = {id: d.tag_id, concept: kb.get(d.tag_id), items: []};\n          map.set(d.tag_id, entry);\n          tags.push(entry);\n        }\n        entry.items.push(items.get(d.enc_id));\n      }\n    });\n\n    // TODO: handle probabilities\n\n    fromDate = dateFormat.parse(params.from);\n    toDate = dateFormat.parse(params.to);\n    post.publish('changed');\n  });\n}\n\n"]}