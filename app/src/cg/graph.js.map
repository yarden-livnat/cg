{"version":3,"sources":["graph.es6"],"names":[],"mappings":"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","file":"graph.js","sourcesContent":["/**\n * Created by yarden on 12/11/14.\n */\n\nfunction shared(a, b) {\n  let count = 0,\n      ia = 0, ib = 0, // indices\n      na = a.length, nb = b.length,\n      va, vb;\n\n  if (a.length === 0 || b.length === 0) { return count; }\n\n  va = a[0];\n  vb = b[0];\n  while (true) {\n    if (va < vb) {\n      if (++ia === na) { return count; }\n      va = a[ia];\n    } else if (va > vb) {\n      if (++ib === nb) { return count; }\n      vb = b[ib];\n    } else { // va== vb\n      count++;\n      if (++ia === na || ++ib === nb) { return count; }\n      va = a[ia];\n      vb = b[ib];\n    }\n  }\n}\n\nfunction jaccard(a, b) {\n  let s = shared(a, b);\n  return s/(a.length + b.length -s);\n}\n\n\nfunction caseScaling(nodes) {\n  let max = _.reduce(nodes,  function(max, d) { return Math.max(max,  d.items.length); }, 0);\n\n  _.each(nodes, function(node) {\n    node.scale = node.items.length/max;\n  });\n}\n\nfunction probScaling(nodes, prob, N) {\n  let max = 0;\n  _.each(nodes,  function(node) {\n    let n = node.items.length;\n    if (n == 0) {\n      node.scale = 0;\n      node.var = 0;\n    } else {\n      let sum = _.reduce(node.items, function (sum, i) { return sum + prob[i].prob; }, 0);\n      max = Math.max(max, sum);\n      node.scale = sum;\n      //node.var = _.reduce(node.items, function (sum, i) {\n      //    let v = prob[i].prob - avg;\n      //    return sum + v * v;\n      //}, 0) / n;\n    }\n  });\n\n  _.each(nodes,  function(node) {\n    node.scale /= max;\n  });\n}\n\nfunction intersect(a, b) {\n  let list = [],\n      ia = 0, ib = 0, // indices\n      na = a.length, nb = b.length,\n      va, vb;\n\n  if (a.length === 0 || b.length === 0) {\n    return list;\n  }\n\n  va = a[0];\n  vb = b[0];\n  while (true) {\n    if (va < vb) {\n      if (++ia === na) {\n        return list;\n      }\n      va = a[ia];\n    } else if (va > vb) {\n      if (++ib === nb) {\n        return list;\n      }\n      vb = b[ib];\n    } else { // va == vb\n      list.push(va);\n      if (++ia === na || ++ib === nb) {\n        return list;\n      }\n      va = a[ia];\n      va = b[ib];\n    }\n  }\n}\n\nexport default function() {\n  let domain = [];\n  let nodes = [];\n  let edges = [];\n  let prob = [];\n\n  function createEdges() {\n    let i, j, n = nodes.length, n1 = n - 1,\n        src, dest, value;\n\n    let min = -1, max = 0, total = 0;\n    let hist = [];\n    edges = [];\n    for(i = 0; i < n1; i++) {\n      src = nodes[i];\n      let c = 0;\n      for(j = i + 1; j < n; j++) {\n        dest = nodes[j];\n        value = jaccard(src.items, dest.items);\n        if (value > 0) {\n          edges.push({\n              id:     src.id + ':' + dest.id,\n              source: src,\n              target: dest,\n              value:  value\n            }\n          );\n          c++;\n        }\n      }\n      //hist[]\n      if (min == -1 || c < min) {\n        min = c;\n      }\n      if (max < c) {\n        max = c;\n      }\n      total += c;\n    }\n    //console.log('min:', min, ' max:', max, ' avg:', total/n);\n  }\n\n  function rescale() {\n    caseScaling(nodes);\n    //probScaling(nodes,  prob, domain.length);\n  }\n\n  /*\n   * api\n   */\n\n  var graph = {\n    get nodes() { return nodes; },\n    get edges() { return edges; },\n\n    set domain(list) {\n      if (domain == list) return;\n\n      domain = list;\n\n      let node, i = nodes.length;\n      while (--i > -1) {\n        node = nodes[i];\n        node.items = domain == undefined ? node.tag.items : intersect(domain, node.tag.items);\n      }\n      rescale();\n      createEdges();\n    }\n  };\n\n  graph.update = function (data) {\n    let prev = new Map();\n    nodes.forEach(function(node) { prev.set(node.id, node); });\n\n    nodes = data;\n    nodes.forEach(function(node) {\n      node.scale = 1.0;\n      node.visible = true;\n      node.selected = false;\n\n      let n = prev.get(node.id);\n      if (n) {\n        node.x = n.x;\n        node.y = n.y;\n      }\n      //color: tag.positive ? opt.POS_COLOR : opt.NEG_COLOR;\n    });\n    rescale();\n    createEdges();\n  };\n\n  return graph;\n}"]}