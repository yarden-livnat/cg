{"version":3,"sources":["info_detectors.es6"],"names":[],"mappings":"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","file":"info_detectors.js","sourcesContent":["/**\n * Created by yarden on 8/18/15.\n */\n\nimport d3 from 'd3';\nimport postal from 'postal';\nimport * as patients from './patients';\nimport {fetch} from './service';\nimport DetectorClass from './components/detector';\n\nexport default function() {\n\n  const N_BINS = 20;\n  const MIN_PROB = 0;\n  const PROB_RANGE = 1-MIN_PROB;\n\n  postal.subscribe({channel: 'global', topic: 'data.changed', callback: dataChanged});\n  postal.subscribe({channel: 'global', topic: 'render', callback: render});\n\n  let selection;\n  let Detector = DetectorClass();\n  let detectors = [];\n  let range = d3.range(MIN_PROB, 1, (1-MIN_PROB)/N_BINS);\n  let current = null;\n\n  function elem(id) {\n    return d3.select('#detectors').select('#detector-'+id);\n  }\n\n  function init(list) {\n    detectors = list;\n    detectors.forEach( d => {\n      d.probGroup = d.prob.group( p => Math.floor((p-MIN_PROB)/PROB_RANGE * N_BINS));\n      d.similarGroup = d.similar.group( p => Math.floor((p-MIN_PROB)/PROB_RANGE * N_BINS));\n    });\n\n    d3.select('#detectors').selectAll('div')\n      .data(list)\n      .enter()\n        .append('div')\n        .attr('id', d => 'detector-'+d.name)\n        .attr('class', 'detector')\n        .call(Detector.build);\n    Detector.on('select', select);\n    Detector.on('range', update);\n  }\n\n  function select(d){\n    if (current) Detector.select(elem(current.name), false);\n    current = current != d ? d : null;\n    if (current) Detector.select(elem(current.name), true);\n    postal.publish({channel: 'detector', topic: 'changed', data: current && current.prob});\n  }\n\n  function update(ext) {\n    if (!current) return;\n    current.prob.filter( p => ext[0] <= p && p <= ext[1]);\n\n    patients.update(current.eid);\n    postal.publish({channel: 'global', topic: 'render'});\n  }\n\n  function dataChanged(data) {\n    fetch('detectors',detectors.map(d => d.name), data.from, data.to)\n      .then( reply => {\n        for (let i=0; i<reply.length; i++) {\n          let detector = detectors[i];\n          let data = reply[i];\n          detector.eid.filterAll();\n          detector.prob.filterAll();\n          detector.similar.filterAll();\n          detector.cf.remove();\n          detector.cf.add(data.rows);\n        }\n        render();\n      })\n      .catch( e => { console.error('Detectors error:', e); });\n  }\n\n  function render() {\n    for (let detector of detectors) {\n      let hist = range.map(d => ({x: d, p: 0, s: 0}));\n\n      detector.probGroup.all().forEach( d => { if (d.key >= 0) hist[d.key].p = d.value; });\n      //detector.similarGroup.all().forEach( d => { if (d.key >= 0) hist[d.key].s = d.value; });\n      detector.data = hist;\n    }\n\n    Detector(d3.select('#detectors').selectAll('.detector'));\n  }\n\n  return {\n    init : init\n  }\n}"]}