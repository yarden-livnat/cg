{"version":3,"sources":["graph.es6"],"names":[],"mappings":"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","file":"graph.js","sourcesContent":["/**\n * Created by yarden on 8/25/15.\n */\n\nimport * as patients from '../patients';\n\nfunction shared(a, b) {\n  let count = 0,\n    ia = 0, ib = 0, // indices\n    na = a.length, nb = b.length,\n    va, vb;\n\n  if (a.length === 0 || b.length === 0) { return count; }\n\n  va = a[0].id;\n  vb = b[0].id;\n  while (true) {\n    if (va < vb) {\n      if (++ia === na) { return count; }\n      va = a[ia].id;\n    } else if (va > vb) {\n      if (++ib === nb) { return count; }\n      vb = b[ib].id;\n    } else { // va== vb\n      count++;\n      if (++ia === na || ++ib === nb) { return count; }\n      va = a[ia].id;\n      vb = b[ib].id;\n    }\n  }\n}\n\nfunction jaccard(a, b) {\n  let s = shared(a.items, b.item);\n  return s/(a.items.length + b.items.length -s);\n}\n\nfunction pearson(a, b) {\n  let r = 0, n=a.days.length;\n  for (let i=0; i<n; i++) {\n    r += a.days[i] * b.days[i];\n  }\n  r = r/((n-1)*a.var*b.var);\n  return r;\n}\n\n/*\n  Node measures\n */\n\nfunction nodesSizeMeasure(nodes, prob) {\n  let max = 0;\n  if (prob) {\n    for(let node of nodes) {\n      node.scale = 0;\n      for(let item of node.items) {\n        node.scale += prob.get(item) || 0;\n      }\n      max = Math.max(max, node.scale);\n    }\n  } else {\n    for(let node of nodes) {\n      node.scale = node.items.length;\n      max = Math.max(max, node.scale);\n    }\n  }\n\n  // scale nodes\n  for (let node of nodes) {\n    node.scale /= max;\n  }\n}\n\n/*\n   Edge Measures\n */\n\nfunction applyEdgeMeasure(nodes, edgeFunc) {\n  let n = nodes.length, n1 = n - 1,\n      src, dest;\n\n  let edges = [];\n  for(let i = 0; i < n1; i++) {\n    src = nodes[i];\n    if (src.items.length == 0) continue;\n\n    for(let j = i + 1; j < n; j++) {\n      dest = nodes[j];\n      let value = edgeFunc(src, dest);\n      //if (value > 0) {\n        edges.push({\n            id:     src.id + ':' + dest.id,\n            source: src,\n            target: dest,\n            value:  Math.abs(value),\n            r: value\n          }\n        );\n      //}\n    }\n  }\n  return edges;\n}\n\nfunction edgeAssociationMeasure(nodes) {\n  return applyEdgeMeasure(nodes, jaccard);\n}\n\nfunction edgeCorrelationMeasure(nodes) {\n  for (let node of nodes) {\n    node.days = Array(patients.datesRange.length).fill(0);\n    for (let e of node.items) {\n      let d = patients.encountersMap.get(e).day;\n      node.days[d]++;\n    }\n    node.mean = d3.mean(node.days);\n    node.var = 0; //d3.variance(node.days);\n    let n = node.days.length;\n    for (let i=0; i<n; i++) {\n      let v = node.days[i] - node.mean;\n      node.var += v*v;\n      node.days[i] = v;\n    }\n    node.var = Math.sqrt(node.var/(n-1));\n  }\n\n  return applyEdgeMeasure(nodes, pearson);\n}\n\nlet measures = {\n  node: {\n    size: nodesSizeMeasure\n  },\n  edge: {\n    association: edgeAssociationMeasure,\n    pearson: edgeCorrelationMeasure\n  }\n};\n\nexport default function() {\n  let nodes = [];\n  let edges = [];\n  let prob = null;\n  let max = 0;\n\n  let nodesFunc = measures.node.size;\n  let edgeFunc = measures.edge.pearson;\n\n  function recalculate() {\n    nodesFunc(nodes, prob);\n    edges = edgeFunc(nodes);\n  }\n\n  let graph = {};\n\n  graph.prob = function(_) {\n    prob = _;\n    nodesFunc(nodes, prob);\n  };\n\n  graph.node = function(_) {\n    if (!arguments.length) return nodes;\n    nodes = _;\n    recalculate();\n    return this;\n  };\n\n  graph.edge = function(_) {\n    if (!arguments.length) return edges;\n    edges = _;\n    return this;\n  };\n\n  graph.edgeFunc = function(f) {\n    if (!arguments.length) return edgeFunc;\n    edgeFunc = f;\n  };\n\n  graph.measures = measures;\n\n  return graph;\n}"]}