{"version":3,"sources":["app.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAiBA,MAAI,MAAM,GAAG,sBAAK,CAAC;AACnB,MAAI,EAAE,GAAG,qBAAI,CAAC,KAAK,CAAC,UAAS,aAAa,CAAC,CAAC;AAC5C,MAAI,SAAS,GAAG,4BAAW,CAAC;AAC5B,MAAI,SAAS,GAAG,mBAAY,CAAC,KAAK,CAAC,UAAS,aAAa,CAAC,CAAC;;AAE3D,MAAI,UAAU,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;;AAE5C,2BAAO,CACJ,KAAK,CAAC,UAAA,EAAE,EAAI;AAAE,aAAQ,IAAI,CAAC,EAAE,CAAC,CAAC;GAAE,CAAC,CAClC,KAAK,CAAC,UAAA,EAAE,EAAI;AAAE,UAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;GAAE,CAAC,CACjC,QAAQ,CAAE,UAAA,GAAG,EAAI;AAChB,QAAI,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,KACf;AACH,gBAAS,IAAI,CAAC,SAAQ,MAAM,CAAC,CAAC;AAC9B,mBAAW,IAAI,EAAE,CAAC;AAClB,eAAS,CAAC,IAAI,CAAC,SAAQ,SAAS,CAAC,GAAG,CAAC,UAAS,WAAW,CAAC,CAAC,CAAC;AAC5D,QAAE,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;AACtD,aAAM,IAAI,CAAC,UAAU,CAAC,CAAC;KACxB;GACF,CAAC,CAAC;;AAGL,WAAS,UAAU,CAAC,GAAG,EAAE,IAAI,EAAE;AAC7B,QAAI,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,KACf;;AAEH,UAAI,CAAC,GAAG,CAAC,OAAO,CAAC,UAAA,CAAC,EAAK;AACrB,SAAC,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;OACtD,CAAC,CAAC;;AAEH,gBAAS,GAAG,CAAC;AACX,YAAI,EAAE,IAAI,CAAC,IAAI;AACf,UAAE,EAAE,IAAI,CAAC,EAAE;AACX,kBAAU,EAAE,IAAI,CAAC,GAAG;AACpB,iBAAS,EAAE,IAAI,CAAC,YAAY;OAC7B,CAAC,CAAC;;;AAGH,0BAAO,OAAO,CAAC,EAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,IAAI,EAAE,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAC,EAAC,CAAC,CAAC;AACjG,0BAAO,OAAO,CAAC,EAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAC,CAAC,CAAC;KACtD;GACF;;AAED,WAAS,KAAK,CAAC,GAAG,EAAE;AAClB,WAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;GACpB;;AAED,WAAS,OAAO,CAAC,EAAE,EAAE;AACnB,QAAI,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AACzB,WAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;GACxE;;AAED,QAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,YAAW;AAC3C,MAAE,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;GAChC,CAAC,CAAC","file":"app.js","sourcesContent":["/**\n * Created by yarden on 8/21/15.\n */\n\nimport queue from 'queue';\nimport postal from 'postal';\n\nimport * as service from './service';\nimport * as query from './query';\nimport * as patients from './patients';\nimport * as infoTables from './info_tables';\nimport * as InfoCharts from './info_charts';\nimport Detectors from './info_detectors';\nimport CG from './cg/cg';\n\nimport Map from './map';\n\nlet geomap = Map();\nlet cg = CG().group(patients.tag_enc_group);\nlet detectors = Detectors();\nlet infoChart = InfoCharts().group(patients.tag_enc_group);\n\nlet dateFormat = d3.time.format('%Y-%m-%d');\n\nqueue()\n  .defer(cb => { service.init(cb); })\n  .defer(cb => { geomap.init(cb); })\n  .awaitAll( err => {\n    if (err) error(err);\n    else {\n      patients.init(service.topics);\n      infoTables.init();\n      detectors.init(service.detectors.map(patients.addDetector));\n      cg(d3.select('#cg-area')).resize(getSize('#cg-area'));\n      query.init(updateData);\n    }\n  });\n\n\nfunction updateData(err, data) {\n  if (err) error(err);\n  else {\n    // clean the data\n    data.enc.forEach(d  => {\n      d.date = d3.time.day.round(dateFormat.parse(d.date));\n    });\n\n    patients.set({\n      from: data.from,\n      to: data.to,\n      encounters: data.enc,\n      relations: data.associations\n    });\n\n    // todo: reapply filters\n    postal.publish({channel: 'global', topic: 'data.changed', data: {from: data.from, to: data.to}});\n    postal.publish({channel: 'global', topic: 'render'});\n  }\n}\n\nfunction error(err) {\n  console.error(err);\n}\n\nfunction getSize(el) {\n  let d3el = d3.select(el);\n  return [parseInt(d3el.style('width')), parseInt(d3el.style('height'))];\n}\n\nwindow.addEventListener('resize', function() {\n  cg.resize(getSize('#cg-area'));\n});\n"]}