{"version":3,"sources":["patients.es6"],"names":[],"mappings":";;;;;;;;;;UAkEgB,IAAI,GAAJ,IAAI;UAIJ,GAAG,GAAH,GAAG;UA6BH,WAAW,GAAX,WAAW;UA4BX,MAAM,GAAN,MAAM;;;;;;AAzHf,MAAI,QAAQ,YAAA,CAAC;UAAT,QAAQ,GAAR,QAAQ;AACZ,MAAI,MAAM,YAAA,CAAC;UAAP,MAAM,GAAN,MAAM;AACV,MAAI,UAAU,YAAA,CAAC;UAAX,UAAU,GAAV,UAAU;AACd,MAAI,aAAa,YAAA,CAAC;UAAd,aAAa,GAAb,aAAa;AACjB,MAAI,SAAS,YAAA,CAAC;;UAAV,SAAS,GAAT,SAAS;AAEb,MAAI,iBAAiB,GAAG,IAAI,GAAG,EAAE,CAAC;UAA9B,iBAAiB,GAAjB,iBAAiB;AACrB,MAAI,aAAa,GAAG,IAAI,GAAG,EAAE,CAAC;UAA1B,aAAa,GAAb,aAAa;AACjB,MAAI,mBAAmB,GAAG,CAAC,CAAC;UAAxB,mBAAmB,GAAnB,mBAAmB;AACvB,MAAI,kBAAkB,GAAG,CAAC,CAAC;;UAAvB,kBAAkB,GAAlB,kBAAkB;AAE7B,MAAI,aAAa,GAAG,+BAAa,CAAC;AAC3B,MAAI,OAAO,GAAG,aAAa,CAAC,SAAS,CAAC,UAAA,CAAC;WAAI,CAAC,CAAC,EAAE;GAAA,CAAC,CAAC,QAA7C,OAAO,GAAP,OAAO;AAAuC,SAAO,CAAC,IAAI,GAAG,YAAY,CAAC;AAC9E,MAAI,QAAQ,GAAG,aAAa,CAAC,SAAS,CAAC,UAAA,CAAC;WAAI,CAAC,CAAC,IAAI;GAAA,CAAC,CAAC,QAAhD,QAAQ,GAAR,QAAQ;AAAyC,UAAQ,CAAC,IAAI,GAAG,YAAY,CAAC;AAClF,MAAI,WAAW,GAAG,aAAa,CAAC,SAAS,CAAC,UAAA,CAAC;WAAI,CAAC,CAAC,OAAO;GAAA,CAAC,CAAC,QAAtD,WAAW,GAAX,WAAW;AAA4C,aAAW,CAAC,IAAI,GAAG,YAAY,CAAC;AAC3F,MAAI,QAAQ,GAAG,aAAa,CAAC,SAAS,CAAC,UAAA,CAAC;WAAI,CAAC,CAAC,EAAE;GAAA,CAAC,CAAC,QAA9C,QAAQ,GAAR,QAAQ;AAAuC,UAAQ,CAAC,IAAI,GAAG,YAAY,CAAC;AAChF,MAAI,WAAW,GAAG,aAAa,CAAC,SAAS,CAAC,UAAA,CAAC;WAAI,CAAC,CAAC,EAAE;GAAA,CAAC,CAAC,QAAjD,WAAW,GAAX,WAAW;AAAuC,SAAO,CAAC,IAAI,GAAG,YAAY,CAAC,AAAC,WAAW,CAAC,OAAO,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC;;AAEpI,MAAI,MAAM,GAAG,+BAAa,CAAC;AACpB,MAAI,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC,UAAA,CAAC;WAAI,CAAC,CAAC,EAAE;GAAA,CAAC,CAAC,QAAzC,UAAU,GAAV,UAAU;AAAgC,YAAU,CAAC,IAAI,GAAG,QAAQ,CAAC;AACzE,MAAI,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC,UAAA,CAAC;WAAI,CAAC,CAAC,QAAQ;GAAA,CAAC,CAAC,QAA/C,UAAU,GAAV,UAAU;AAAsC,YAAU,CAAC,IAAI,GAAG,QAAQ,CAAC;AAC/E,MAAI,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC,UAAA,CAAC;WAAI,CAAC,CAAC,MAAM;GAAA,CAAC,CAAC,QAA7C,UAAU,GAAV,UAAU;AAAoC,YAAU,CAAC,IAAI,GAAG,QAAQ,CAAC;;AAEpF,MAAI,YAAY,GAAG,+BAAa,CAAC;AACjC,MAAI,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC,UAAA,CAAC;WAAI,CAAC,CAAC,MAAM;GAAA,CAAC,CAAC;AACtD,MAAI,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC,UAAA,CAAC;WAAI,CAAC,CAAC,MAAM;GAAA,CAAC,CAAC;;AAE/C,MAAI,UAAU,GAAG,YAAY,CAAC,SAAS,CAAC,UAAA,CAAC;WAAI,CAAC,CAAC,MAAM;GAAA,CAAC,CAAC,QAAnD,UAAU,GAAV,UAAU;AAA0C,YAAU,CAAC,IAAI,GAAG,WAAW,CAAC;AACtF,MAAI,aAAa,GAAG,UAAU,CAAC,KAAK,EAAE,CAAC,MAAM,CAClD,UAAC,CAAC,EAAC,CAAC,EAAK;AAAE,KAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,AAAC,OAAO,CAAC,CAAC;GAAE,EACjC,UAAC,CAAC,EAAC,CAAC,EAAK;AAAE,KAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,AAAC,OAAO,CAAC,CAAC;GAAE,EACjD;WAAM,EAAE;GAAA,CAAC,CAAC;;UAHD,aAAa,GAAb,aAAa;AAKxB,WAAS,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE;AACxB,QAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACf,QAAI,CAAC,GAAG,GAAG,GAAG,CAAC;GAChB;;AAED,QAAM,CAAC,SAAS,CAAC,OAAO,GAAG,YAAW;AAAE,WAAO,IAAI,CAAC,GAAG,CAAC;GAAE,CAAC;;AAEpD,MAAI,OAAO,GAAG,YAAY,CAAC,SAAS,CAAC,UAAA,CAAC,EAAI;AAAE,WAAO,IAAI,MAAM,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;GAAE,CAAC,CAAC,QAAlF,OAAO,GAAP,OAAO;AAA4E,SAAO,CAAC,IAAI,GAAG,WAAW,CAAC;;AAIzH,WAAS,KAAK,CAAC,IAAI,EAAE;AACnB,YA7CS,QAAQ,GA6CjB,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;AACrB,YA7CS,MAAM,GA6Cf,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC;;AAEjB,YA9CS,UAAU,GA8CnB,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;AAC7B,YA7CS,SAAS,GA6ClB,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;;AAE3B,YAhDS,aAAa,GAgDtB,aAAa,GAAG,IAAI,GAAG,EAAE,CAAC;AAC1B,cAAU,CAAC,OAAO,CAAE,UAAA,CAAC,EAAI;AACvB,OAAC,CAAC,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;AACnB,mBAAa,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;KAC3B,CAAC,CAAC;;AAEH,aAAS,CAAC,OAAO,CAAC,UAAA,CAAC;aAAI,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC;KAAA,CAAC,CAAC;GACxE;;AAEM,WAAS,IAAI,CAAC,CAAC,EAAE;AACtB,UAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;GACf;;AAEM,WAAS,GAAG,CAAC,IAAI,EAAE;AACxB,SAAK,CAAC,IAAI,CAAC,CAAC;;AAEZ,WAAO,CAAC,SAAS,EAAE,CAAC;AACpB,YAAQ,CAAC,SAAS,EAAE,CAAC;AACrB,eAAW,CAAC,SAAS,EAAE,CAAC;AACxB,YAAQ,CAAC,SAAS,EAAE,CAAC;AACrB,eAAW,CAAC,SAAS,EAAE,CAAC;AACxB,iBAAa,CAAC,MAAM,EAAE,CAAC;AACvB,iBAAa,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;AAEnC,aAAS,CAAC,SAAS,EAAE,CAAC;AACtB,aAAS,CAAC,SAAS,EAAE,CAAC;AACtB,cAAU,CAAC,SAAS,EAAE,CAAC;AACvB,WAAO,CAAC,SAAS,EAAE,CAAC;AACpB,gBAAY,CAAC,MAAM,EAAE,CAAC;AACtB,gBAAY,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;;AAEjC,cAAU,CAAC,SAAS,EAAE,CAAC;AACvB,cAAU,CAAC,SAAS,EAAE,CAAC;AACvB,cAAU,CAAC,SAAS,EAAE,CAAC;GAExB;;;;AAKD,MAAI,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;;AAEnB,WAAS,WAAW,CAAC,CAAC,EAAE;AAC7B,QAAI,EAAE,GAAG,+BAAa,CAAC;AACvB,QAAI,QAAQ,GAAG,EAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,SAAS,CAAC,UAAA,CAAC;eAAI,CAAC,CAAC,EAAE;OAAA,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,SAAS,CAAC,UAAA,CAAC;eAAI,CAAC,CAAC,IAAI;OAAA,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,SAAS,CAAC,UAAA,CAAC;eAAI,CAAC,CAAC,OAAO;OAAA,CAAC,EAAC,CAAC;AAC5I,YAAQ,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,AAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,GAAG,UAAU,CAAC;AACrD,YAAQ,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,AAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;AACvD,YAAQ,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,AAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,GAAG,UAAU,CAAC;AAC7D,aAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;;AAEvC,WAAO,QAAQ,CAAC;GACjB;;;;AAID,WAAS,YAAY,CAAC,GAAG,EAAE;AACzB,QAAI,CAAC,GAAG,CAAC,OAAO,EAAE;AAChB,SAAG,CAAC,OAAO,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC;KAC3B;AACD,WAAO,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,UAAC,CAAC,EAAE,CAAC;aAAK,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;KAAA,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;GAClF;;AAED,WAAS,UAAU,CAAC,GAAG,EAAE;AACvB,QAAI,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;;;;;;AACpB,2BAAiB,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,8HAAE;YAA3B,IAAI;;AACX,WAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;OAClB;;;;;;;;;;;;;;;;AACD,WAAO,GAAG,CAAC;GACZ;;AAEM,WAAS,MAAM,CAAC,SAAS,EAAE;AAChC,QAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACnB,QAAI,UAAU,YAAA,CAAC;;;AAGf,QAAI,SAAS,CAAC,IAAI,KAAK,YAAY,EAAE;AACnC,gBAAU,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;AACnC,eAAS,CAAC,MAAM,CAAE,UAAA,CAAC;eAAI,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;OAAA,CAAC,CAAC;;AAE1C,gBAAU,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC;AACrC,gBAAU,CAAC,MAAM,CAAE,UAAA,CAAC;eAAI,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;OAAA,CAAE,CAAC;;AAE5C,gBAAU,GAAE,YAAY,CAAC,WAAW,CAAC,CAAC;AACtC,eAAS,CAAC,OAAO,CAAE,UAAA,QAAQ,EAAI;AAAE,gBAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,UAAA,CAAC;iBAAI,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;SAAA,CAAE,CAAA;OAAC,CAAC,CAAC;KACjF;;;SAGI,IAAI,SAAS,CAAC,IAAI,IAAI,QAAQ,EAAE;AACnC,gBAAU,GAAG,YAAY,CAAC,UAAU,CAAC,CAAC;AACtC,eAAS,CAAC,MAAM,CAAE,UAAA,CAAC;eAAI,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;OAAA,CAAE,CAAC;;AAE3C,gBAAU,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC;AACrC,aAAO,CAAC,MAAM,CAAE,UAAA,CAAC;eAAI,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;OAAA,CAAE,CAAC;;AAEzC,gBAAU,GAAG,YAAY,CAAC,WAAW,CAAC,CAAC;AACvC,eAAS,CAAC,OAAO,CAAE,UAAA,QAAQ,EAAI;AAAE,gBAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,UAAA,CAAC;iBAAI,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;SAAA,CAAE,CAAA;OAAC,CAAC,CAAC;KACjF;;;SAGI,IAAI,SAAS,CAAC,IAAI,IAAI,UAAU,EAAE;AACrC,gBAAU,GAAI,YAAY,CAAC,SAAS,CAAC,CAAC;AACrC,iBAAW,CAAC,MAAM,CAAE,UAAA,CAAC;eAAI,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;OAAA,CAAC,CAAC;;AAE7C,gBAAU,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC;AACjC,eAAS,CAAC,MAAM,CAAE,UAAA,CAAC;eAAI,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;OAAA,CAAC,CAAC;;AAE1C,gBAAU,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC;AACrC,gBAAU,CAAC,MAAM,CAAE,UAAA,CAAC;eAAI,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;OAAA,CAAE,CAAC;KAC7C;;;SAGI,IAAI,SAAS,CAAC,IAAI,IAAI,WAAW,EAAG;AACvC,gBAAU,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC;AACrC,gBAAU,CAAC,MAAM,CAAE,UAAA,CAAC;eAAI,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;OAAA,CAAE,CAAC;;AAE5C,gBAAU,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC;AACrC,aAAO,CAAC,MAAM,CAAE,UAAA,CAAC;eAAI,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;OAAA,CAAE,CAAC;;AAEzC,gBAAU,GAAG,YAAY,CAAC,WAAW,CAAC,CAAC;AACvC,eAAS,CAAC,OAAO,CAAE,UAAA,QAAQ,EAAI;AAAE,gBAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,UAAA,CAAC;iBAAI,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;SAAA,CAAE,CAAA;OAAC,CAAC,CAAC;KACjF;;AAED,YAvKS,iBAAiB,GAuK1B,iBAAiB,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC;AACxC,YAvKS,aAAa,GAuKtB,aAAa,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC;;AAEvC,YAxKS,mBAAmB,GAwK5B,mBAAmB,GAAG,iBAAiB,CAAC,IAAI,CAAC;AAC7C,YAxKS,kBAAkB,GAwK3B,kBAAkB,GAAG,aAAa,CAAC,IAAI,CAAC;AACxC,WAAO,CAAC,GAAG,CAAC,kBAAkB,EAAC,SAAS,CAAC,IAAI,EAAC,OAAO,EAAE,IAAI,CAAC,GAAG,EAAE,GAAC,CAAC,EAAC,QAAQ,EAAC,iBAAiB,CAAC,IAAI,EAAE,MAAM,EAAE,aAAa,CAAC,IAAI,CAAC,CAAC;GAClI","file":"patients.js","sourcesContent":["/**\n * Created by yarden on 8/21/15.\n */\n\nimport crossfilter from 'crossfilter';\n\nexport let fromDate;\nexport let toDate;\nexport let encounters;\nexport let encountersMap;\nexport let relations;\n\nexport let currentEncounters = new Set();\nexport let currentTopics = new Set();\nexport let numActiveEncounters = 0;\nexport let numActiveRelations = 0;\n\nlet encounters_cf = crossfilter();\nexport let enc_eid = encounters_cf.dimension(d => d.id); enc_eid.name = 'encounters';\nexport let enc_date = encounters_cf.dimension(d => d.date); enc_date.name = 'encounters';\nexport let enc_zipcode = encounters_cf.dimension(d => d.zipcode); enc_zipcode.name = 'encounters';\nexport let enc_tags = encounters_cf.dimension(d => d.id); enc_tags.name = 'encounters';\nexport let enc_eid_det = encounters_cf.dimension(d => d.id); enc_eid.name = 'encounters'; enc_eid_det.collect = enc_eid_det.group();\n\nlet topics = crossfilter();\nexport let topics_tid = topics.dimension(d => d.id); topics_tid.name = 'topics';\nexport let topics_cat = topics.dimension(d => d.category); topics_cat.name = 'topics';\nexport let topics_sys = topics.dimension(d => d.system); topics_sys.name = 'topics';\n\nlet relations_cf = crossfilter();\nlet rel_eid_p = relations_cf.dimension(r => r.enc_id);\nlet rel_tid_p = relations_cf.dimension(r => r.tag_id);\n\nexport let rel_tid_cg = relations_cf.dimension(r => r.tag_id); rel_tid_cg.name = 'relations';\nexport let tag_enc_group = rel_tid_cg.group().reduce(\n  (p,v) => { p.push(v); return p; },\n  (p,v) => { p.splice(p.indexOf(v), 1); return p; },\n  () => []);\n\nfunction TagEnc(eid, tid) {\n  this.eid = eid;\n  this.tid = tid;\n}\n\nTagEnc.prototype.valueOf = function() { return this.tid; };\n\nexport let rel_tid = relations_cf.dimension(r => { return new TagEnc(r.enc_id, r.tag_id); }); rel_tid.name = 'relations';\n\n\n\nfunction setup(data) {\n  fromDate = data.from;\n  toDate = data.to;\n\n  encounters = data.encounters;\n  relations = data.relations;\n\n  encountersMap = new Map();\n  encounters.forEach( e => {\n    e.tags = new Set();\n    encountersMap.set(e.id, e)\n  });\n\n  relations.forEach(r => encountersMap.get(r.enc_id).tags.add(r.tag_id));\n}\n\nexport function init(_) {\n  topics.add(_);\n}\n\nexport function set(data) {\n  setup(data);\n\n  enc_eid.filterAll();\n  enc_date.filterAll();\n  enc_zipcode.filterAll();\n  enc_tags.filterAll();\n  enc_eid_det.filterAll();\n  encounters_cf.remove();\n  encounters_cf.add(data.encounters);\n\n  rel_eid_p.filterAll();\n  rel_tid_p.filterAll();\n  rel_tid_cg.filterAll();\n  rel_tid.filterAll();\n  relations_cf.remove();\n  relations_cf.add(data.relations);\n\n  topics_tid.filterAll();\n  topics_cat.filterAll();\n  topics_sys.filterAll();\n\n}\n\n\n/* detectors */\n\nlet detectors = new Map();\n\nexport function addDetector(d) {\n  let cf = crossfilter();\n  let detector = {name: d.name, cf: cf, eid: cf.dimension(d => d.id), prob: cf.dimension(d => d.prob), similar: cf.dimension(d => d.similar)};\n  detector.eid.cf = cf; detector.eid.name = 'detector';\n  detector.prob.cf = cf; detector.prob.name = 'detector';\n  detector.similar.cf = cf; detector.similar.name = 'detector';\n  detectors.set(detector.name, detector);\n\n  return detector;\n}\n\n/* update */\n\nfunction groupCollect(dim) {\n  if (!dim.collect) {\n    dim.collect = dim.group();\n  }\n  return dim.collect.all().reduce((p, v) => v.value ? p.add(v.key) : p, new Set());\n}\n\nfunction dimCollect(dim) {\n  let set = new Set();\n  for (let item of dim.top(Infinity)) {\n    set.add(item.id);\n  }\n  return set;\n}\n\nexport function update(dimension) {\n  let t = Date.now(); // performance measurement\n  let collection;\n\n  /* encounters */\n  if (dimension.name === 'encounters') {\n    collection = groupCollect(enc_eid);\n    rel_eid_p.filter( e => collection.has(e));\n\n    collection = groupCollect(rel_tid_p);\n    topics_tid.filter( t => collection.has(t) );\n\n    collection= groupCollect(enc_eid_det);\n    detectors.forEach( detector => { detector.eid.filter(e => collection.has(e) )});\n  }\n\n  /* topics */\n  else if (dimension.name == 'topics') {\n    collection = groupCollect(topics_tid);\n    rel_tid_p.filter( t => collection.has(t) );\n\n    collection = groupCollect(rel_eid_p);\n    enc_eid.filter( e => collection.has(e) );\n\n    collection = groupCollect(enc_eid_det);\n    detectors.forEach( detector => { detector.eid.filter(e => collection.has(e) )});\n  }\n\n  /* detectors */\n  else if (dimension.name == 'detector') {\n    collection =  groupCollect(dimension);\n     enc_eid_det.filter( e => collection.has(e));\n\n    collection = dimCollect(enc_eid);\n    rel_eid_p.filter( e => collection.has(e));\n\n    collection = groupCollect(rel_tid_p);\n    topics_tid.filter( t => collection.has(t) );\n  }\n\n  /* relations */\n  else if (dimension.name == 'relations' ) {\n    collection = groupCollect(rel_tid_p);\n    topics_tid.filter( t => collection.has(t) );\n\n    collection = groupCollect(rel_eid_p);\n    enc_eid.filter( e => collection.has(e) );\n\n    collection = groupCollect(enc_eid_det);\n    detectors.forEach( detector => { detector.eid.filter(e => collection.has(e) )});\n  }\n\n  currentEncounters = dimCollect(enc_eid);\n  currentTopics = dimCollect(topics_tid);\n\n  numActiveEncounters = currentEncounters.size;\n  numActiveRelations = currentTopics.size;\n  console.log('patient update [',dimension.name,'] in ', Date.now()-t,'  enc:',currentEncounters.size, 'top:', currentTopics.size);\n}"]}