{"version":3,"sources":["patients.es6"],"names":[],"mappings":";;;;;;;;;;UA2CgB,IAAI,GAAJ,IAAI;UAIJ,GAAG,GAAH,GAAG;UAsBH,WAAW,GAAX,WAAW;UAoBX,MAAM,GAAN,MAAM;;;;;;AAnFf,MAAI,UAAU,YAAA,CAAC;UAAX,UAAU,GAAV,UAAU;AACd,MAAI,aAAa,YAAA,CAAC;UAAd,aAAa,GAAb,aAAa;AACjB,MAAI,SAAS,YAAA,CAAC;;UAAV,SAAS,GAAT,SAAS;AAEpB,MAAI,aAAa,GAAG,+BAAa,CAAC;AAC3B,MAAI,OAAO,GAAG,aAAa,CAAC,SAAS,CAAC,UAAA,CAAC;WAAI,CAAC,CAAC,EAAE;GAAA,CAAC,CAAC,QAA7C,OAAO,GAAP,OAAO;AAAuC,SAAO,CAAC,IAAI,GAAG,YAAY,CAAC;AAC9E,MAAI,QAAQ,GAAG,aAAa,CAAC,SAAS,CAAC,UAAA,CAAC;WAAI,CAAC,CAAC,IAAI;GAAA,CAAC,CAAC,QAAhD,QAAQ,GAAR,QAAQ;AAAyC,UAAQ,CAAC,IAAI,GAAG,YAAY,CAAC;AAClF,MAAI,WAAW,GAAG,aAAa,CAAC,SAAS,CAAC,UAAA,CAAC;WAAI,CAAC,CAAC,OAAO;GAAA,CAAC,CAAC,QAAtD,WAAW,GAAX,WAAW;AAA4C,aAAW,CAAC,IAAI,GAAG,YAAY,CAAC;AAC3F,MAAI,QAAQ,GAAG,aAAa,CAAC,SAAS,CAAC,UAAA,CAAC;WAAI,CAAC,CAAC,EAAE;GAAA,CAAC,CAAC,QAA9C,QAAQ,GAAR,QAAQ;AAAuC,UAAQ,CAAC,IAAI,GAAG,YAAY,CAAC;AAChF,MAAI,WAAW,GAAG,aAAa,CAAC,SAAS,CAAC,UAAA,CAAC;WAAI,CAAC,CAAC,EAAE;GAAA,CAAC,CAAC,QAAjD,WAAW,GAAX,WAAW;AAAuC,SAAO,CAAC,IAAI,GAAG,YAAY,CAAC,AAAC,WAAW,CAAC,OAAO,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC;;AAEpI,MAAI,MAAM,GAAG,+BAAa,CAAC;AACpB,MAAI,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC,UAAA,CAAC;WAAI,CAAC,CAAC,EAAE;GAAA,CAAC,CAAC,QAAzC,UAAU,GAAV,UAAU;AAAgC,YAAU,CAAC,IAAI,GAAG,QAAQ,CAAC;AACzE,MAAI,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC,UAAA,CAAC;WAAI,CAAC,CAAC,QAAQ;GAAA,CAAC,CAAC,QAA/C,UAAU,GAAV,UAAU;AAAsC,YAAU,CAAC,IAAI,GAAG,QAAQ,CAAC;AAC/E,MAAI,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC,UAAA,CAAC;WAAI,CAAC,CAAC,MAAM;GAAA,CAAC,CAAC,QAA7C,UAAU,GAAV,UAAU;AAAoC,YAAU,CAAC,IAAI,GAAG,QAAQ,CAAC;;AAEpF,MAAI,YAAY,GAAG,+BAAa,CAAC;AACjC,MAAI,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC,UAAA,CAAC;WAAI,CAAC,CAAC,MAAM;GAAA,CAAC,CAAC;AACtD,MAAI,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC,UAAA,CAAC;WAAI,CAAC,CAAC,MAAM;GAAA,CAAC,CAAC;;AAE/C,MAAI,OAAO,GAAG,YAAY,CAAC,SAAS,CAAC,UAAA,CAAC;WAAI,CAAC,CAAC,MAAM;GAAA,CAAC,CAAC,QAAhD,OAAO,GAAP,OAAO;AAA0C,SAAO,CAAC,IAAI,GAAG,WAAW,CAAC;AAChF,MAAI,UAAU,GAAG,YAAY,CAAC,SAAS,CAAC,UAAA,CAAC;WAAI,CAAC,CAAC,MAAM;GAAA,CAAC,CAAC,QAAnD,UAAU,GAAV,UAAU;AAA0C,SAAO,CAAC,IAAI,GAAG,WAAW,CAAC;;AAG1F,WAAS,KAAK,CAAC,IAAI,EAAE;AACnB,YAzBS,UAAU,GAyBnB,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;AAC7B,YAxBS,SAAS,GAwBlB,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;;AAE3B,YA3BS,aAAa,GA2BtB,aAAa,GAAG,IAAI,GAAG,EAAE,CAAC;AAC1B,cAAU,CAAC,OAAO,CAAE,UAAA,CAAC,EAAI;AACvB,OAAC,CAAC,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;AACnB,mBAAa,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;KAC3B,CAAC,CAAC;;AAEH,aAAS,CAAC,OAAO,CAAC,UAAA,CAAC;aAAI,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC;KAAA,CAAC,CAAC;GACxE;;AAEM,WAAS,IAAI,CAAC,CAAC,EAAE;AACtB,UAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;GACf;;AAEM,WAAS,GAAG,CAAC,IAAI,EAAE;AACxB,SAAK,CAAC,IAAI,CAAC,CAAC;;AAEZ,WAAO,CAAC,SAAS,EAAE,CAAC;AACpB,YAAQ,CAAC,SAAS,EAAE,CAAC;AACrB,eAAW,CAAC,SAAS,EAAE,CAAC;AACxB,iBAAa,CAAC,MAAM,EAAE,CAAC;AACvB,iBAAa,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;AAEnC,aAAS,CAAC,SAAS,EAAE,CAAC;AACtB,aAAS,CAAC,SAAS,EAAE,CAAC;AACtB,gBAAY,CAAC,MAAM,EAAE,CAAC;AACtB,gBAAY,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;;AAEjC,QAAI,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC3B,cAAU,CAAC,MAAM,CAAC,UAAA,CAAC;aAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;KAAA,CAAC,CAAC;GACpC;;;;AAID,MAAI,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;;AAEnB,WAAS,WAAW,CAAC,CAAC,EAAE;AAC7B,QAAI,EAAE,GAAG,+BAAa,CAAC;AACvB,QAAI,QAAQ,GAAG,EAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,SAAS,CAAC,UAAA,CAAC;eAAI,CAAC,CAAC,EAAE;OAAA,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,SAAS,CAAC,UAAA,CAAC;eAAI,CAAC,CAAC,IAAI;OAAA,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,SAAS,CAAC,UAAA,CAAC;eAAI,CAAC,CAAC,OAAO;OAAA,CAAC,EAAC,CAAC;AAC5I,YAAQ,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,AAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,GAAG,UAAU,CAAC;AACrD,YAAQ,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,AAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;AACvD,YAAQ,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,AAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,GAAG,UAAU,CAAC;AAC7D,aAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;;AAEvC,WAAO,QAAQ,CAAC;GACjB;;;;AAID,WAAS,OAAO,CAAC,GAAG,EAAE;AACpB,QAAI,CAAC,GAAG,CAAC,OAAO,EAAE;AAChB,SAAG,CAAC,OAAO,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC;KAC3B;AACD,WAAO,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,UAAC,CAAC,EAAE,CAAC;aAAK,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;KAAA,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;GAClF;;AAEM,WAAS,MAAM,CAAC,SAAS,EAAE;AAChC,QAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACnB,WAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;AAChD,QAAI,SAAS,CAAC,IAAI,KAAK,YAAY,EAAE;;AACnC,YAAI,iBAAiB,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AACzC,iBAAS,CAAC,MAAM,CAAE,UAAA,CAAC;iBAAI,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC;SAAA,CAAC,CAAC;;AAEjD,YAAI,aAAa,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACvC,kBAAU,CAAC,MAAM,CAAE,UAAA,CAAC;iBAAI,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;SAAA,CAAE,CAAC;;;AAG/C,YAAI,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AAClC,iBAAS,CAAC,OAAO,CAAE,UAAA,QAAQ,EAAI;AAAE,kBAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,UAAA,CAAC;mBAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;WAAA,CAAE,CAAA;SAAC,CAAC,CAAC;;KAC7E,MACI,IAAI,SAAS,CAAC,IAAI,IAAI,QAAQ,EAAE;;AACnC,YAAI,aAAa,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACxC,iBAAS,CAAC,MAAM,CAAE,UAAA,CAAC;iBAAI,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;SAAA,CAAE,CAAC;;AAE9C,YAAI,iBAAiB,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAC3C,eAAO,CAAC,MAAM,CAAE,UAAA,CAAC;iBAAI,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC;SAAA,CAAE,CAAC;;;AAGhD,YAAI,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AAClC,iBAAS,CAAC,OAAO,CAAE,UAAA,QAAQ,EAAI;AAAE,kBAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,UAAA,CAAC;mBAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;WAAA,CAAE,CAAA;SAAC,CAAC,CAAC;;KAE7E,MAAM,IAAI,SAAS,CAAC,IAAI,IAAI,UAAU,EAAE;;AACrC,YAAI,MAAM,GAAI,OAAO,CAAC,SAAS,CAAC,CAAC;AACjC,mBAAW,CAAC,MAAM,CAAE,UAAA,CAAC;iBAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;SAAA,CAAC,CAAC;;AAExC,YAAI,iBAAiB,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAC3C,iBAAS,CAAC,MAAM,CAAE,UAAA,CAAC;iBAAI,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC;SAAA,CAAC,CAAC;;AAEjD,YAAI,aAAa,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACvC,kBAAU,CAAC,MAAM,CAAE,UAAA,CAAC;iBAAI,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;SAAA,CAAE,CAAC;;KAElD,MACI,IAAI,SAAS,CAAC,IAAI,IAAI,WAAW,EAAG;;AACrC,YAAI,aAAa,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACvC,kBAAU,CAAC,MAAM,CAAE,UAAA,CAAC;iBAAI,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;SAAA,CAAE,CAAC;;AAE/C,YAAI,iBAAiB,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAC3C,eAAO,CAAC,MAAM,CAAE,UAAA,CAAC;iBAAI,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC;SAAA,CAAE,CAAC;;;AAGhD,YAAI,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AAClC,iBAAS,CAAC,OAAO,CAAE,UAAA,QAAQ,EAAI;AAAE,kBAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,UAAA,CAAC;mBAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;WAAA,CAAE,CAAA;SAAC,CAAC,CAAC;;KAE/E;AACD,WAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,GAAG,EAAE,GAAC,CAAC,CAAC,CAAC;GAC/C","file":"patients.js","sourcesContent":["/**\n * Created by yarden on 8/21/15.\n */\n\nimport crossfilter from 'crossfilter';\n\nexport let encounters;\nexport let encountersMap;\nexport let relations;\n\nlet encounters_cf = crossfilter();\nexport let enc_eid = encounters_cf.dimension(d => d.id); enc_eid.name = 'encounters';\nexport let enc_date = encounters_cf.dimension(d => d.date); enc_date.name = 'encounters';\nexport let enc_zipcode = encounters_cf.dimension(d => d.zipcode); enc_zipcode.name = 'encounters';\nexport let enc_tags = encounters_cf.dimension(d => d.id); enc_tags.name = 'encounters';\nexport let enc_eid_det = encounters_cf.dimension(d => d.id); enc_eid.name = 'encounters'; enc_eid_det.collect = enc_eid_det.group();\n\nlet topics = crossfilter();\nexport let topics_tid = topics.dimension(d => d.id); topics_tid.name = 'topics';\nexport let topics_cat = topics.dimension(d => d.category); topics_cat.name = 'topics';\nexport let topics_sys = topics.dimension(d => d.system); topics_sys.name = 'topics';\n\nlet relations_cf = crossfilter();\nlet rel_eid_p = relations_cf.dimension(r => r.enc_id);\nlet rel_tid_p = relations_cf.dimension(r => r.tag_id);\n//let rel_enc_det = relations_cf.dimension( r=> r.enc_id);\nexport let rel_tid = relations_cf.dimension(r => r.tag_id); rel_tid.name = 'relations';\nexport let rel_tid_cg = relations_cf.dimension(r => r.tag_id); rel_tid.name = 'relations';\n\n\nfunction setup(data) {\n  encounters = data.encounters;\n  relations = data.relations;\n\n  encountersMap = new Map();\n  encounters.forEach( e => {\n    e.tags = new Set();\n    encountersMap.set(e.id, e)\n  });\n\n  relations.forEach(r => encountersMap.get(r.enc_id).tags.add(r.tag_id));\n}\n\nexport function init(_) {\n  topics.add(_);\n}\n\nexport function set(data) {\n  setup(data);\n\n  enc_eid.filterAll();\n  enc_date.filterAll();\n  enc_zipcode.filterAll();\n  encounters_cf.remove();\n  encounters_cf.add(data.encounters);\n\n  rel_eid_p.filterAll();\n  rel_tid_p.filterAll();\n  relations_cf.remove();\n  relations_cf.add(data.relations);\n\n  let tid = collect(rel_tid);\n  topics_tid.filter(t => tid.has(t));\n}\n\n/* detectors */\n\nlet detectors = new Map();\n\nexport function addDetector(d) {\n  let cf = crossfilter();\n  let detector = {name: d.name, cf: cf, eid: cf.dimension(d => d.id), prob: cf.dimension(d => d.prob), similar: cf.dimension(d => d.similar)};\n  detector.eid.cf = cf; detector.eid.name = 'detector';\n  detector.prob.cf = cf; detector.prob.name = 'detector';\n  detector.similar.cf = cf; detector.similar.name = 'detector';\n  detectors.set(detector.name, detector);\n\n  return detector;\n}\n\n/* update */\n\nfunction collect(dim) {\n  if (!dim.collect) {\n    dim.collect = dim.group();\n  }\n  return dim.collect.all().reduce((p, v) => v.value ? p.add(v.key) : p, new Set());\n}\n\nexport function update(dimension) {\n  let t = Date.now(); // performance measure\n  console.log('patients update:', dimension.name);\n  if (dimension.name === 'encounters') {\n    let currentEncounters = collect(enc_eid);\n    rel_eid_p.filter( e => currentEncounters.has(e));\n\n    let currentTopics = collect(rel_tid_p);\n    topics_tid.filter( t => currentTopics.has(t) );\n\n    //detectors.forEach( detector => { detector.eid.filter(e => currentEncounters.has(e) )});\n    let detEnc = collect(enc_eid_det);\n    detectors.forEach( detector => { detector.eid.filter(e => detEnc.has(e) )});\n  }\n  else if (dimension.name == 'topics') {\n    let currentTopics = collect(topics_tid);\n    rel_tid_p.filter( t => currentTopics.has(t) );\n\n    let currentEncounters = collect(rel_eid_p);\n    enc_eid.filter( e => currentEncounters.has(e) );\n\n    //detectors.forEach( detector => { detector.eid.filter(e => currentEncounters.has(e) )});\n    let detEnc = collect(enc_eid_det);\n    detectors.forEach( detector => { detector.eid.filter(e => detEnc.has(e) )});\n\n  } else if (dimension.name == 'detector') {\n      let detEnc =  collect(dimension);\n      enc_eid_det.filter( e => detEnc.has(e));\n\n      let currentEncounters = collect(rel_eid_p);\n      rel_eid_p.filter( e => currentEncounters.has(e));\n\n      let currentTopics = collect(rel_tid_p);\n      topics_tid.filter( t => currentTopics.has(t) );\n\n  }\n  else if (dimension.name == 'relations' ) {\n      let currentTopics = collect(rel_tid_p);\n      topics_tid.filter( t => currentTopics.has(t) );\n\n      let currentEncounters = collect(rel_eid_p);\n      enc_eid.filter( e => currentEncounters.has(e) );\n\n      //detectors.forEach( detector => { detector.eid.filter(e => currentEncounters.has(e) )});\n      let detEnc = collect(enc_eid_det);\n      detectors.forEach( detector => { detector.eid.filter(e => detEnc.has(e) )});\n\n  }\n  console.log('patient: update ', Date.now()-t);\n}"]}