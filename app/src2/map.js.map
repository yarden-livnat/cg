{"version":3,"sources":["map.es6"],"names":[],"mappings":"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","file":"map.js","sourcesContent":["/**\n * Created by yarden on 8/21/15.\n */\n\nimport d3 from 'd3';\nimport queue from 'queue';\nimport postal from 'postal';\nimport * as L from 'leaflet';\n\nimport {MAP_DEFAULTS} from './config';\nimport * as patients from './patients';\n\n\nexport default function (opt) {\n\n  const AREA_ALPHA = 0.6;\n  const POPULATION_FACTOR = 1000;\n  const DURATION = 500;\n\n  const BOUNDARY_HIGHLIGHT_WIDTH = '1.5px';\n  const BOUNDARY_ACTIVE_WIDTH = '0.5px';\n  const BOUNDARY_NON_ACTIVE_WIDTH = '0';\n\n  const BOUNDARY_SELECTED_COLOR = 'blue';\n  const BOUNDARY_ACTIVE_COLOR = '#333';\n  const BOUNDARY_NON_ACTIVE_COLOR = '#333';\n\n  let format = d3.format('4.2f');\n\n  let colorScale = d3.interpolateLab('#fff', '#f00');\n  let width, height;\n  let population = new Map();\n\n  //let zipcodes = new Map();\n  //let active = new Map();\n  //let current = new Map();\n  let svg, svgContainer;\n\n  let dirty = false;\n  let dimension = patients.enc_zipcode;\n  let features;\n  let selectedZipcodes = new Set();\n\n  //let options = Object.assign({}, MAP_DEFAULTS, opt);\n  let options = MAP_DEFAULTS;\n  let map = new L.Map('map')\n    .addLayer(L.tileLayer(options.mapbox.url, options.mapbox.opt))\n    .setView(options.center, options.zoom);\n\n  let transform = d3.geo.transform({point: projectPoint});\n  let path = d3.geo.path().projection(transform);\n\n\n  postal.subscribe({channel: 'global', topic: 'render', callback: render});\n\n  /* Initialize the SVG layer */\n  map._initPathRoot();\n\n  svgContainer = d3.select('#map').select('svg');\n  svg = svgContainer.append('g');\n\n\n  function init(cb) {\n    queue()\n      .defer(d3.json, options.zipcodes_file)\n      .defer(d3.csv, '/data/population')\n      .await( (err, collection, pop)  => {\n        if (!err) {\n          // population\n          pop.forEach(function(d) { population.set(d.zipcode, +d.population);});\n\n          // zipcodes\n          features = collection.features;\n          features.forEach(f => {\n            f.population = population.get(f.properties.Zip_Code) || 0;\n            f.pop_factor = f.population && POPULATION_FACTOR/f.population || 0;\n            f.active = 0;\n          });\n\n          let feature = svg.selectAll(\"path\")\n            .data(features, function(d) { return d.properties.Zip_Code;})\n            .enter()\n            .append(\"path\")\n              .on('mouseenter', d => { showInfo(d, true); })\n              .on('mouseout', d => { showInfo(d, false); })\n              .on('click', selectZipcode);\n\n          function update() {\n            feature.attr(\"d\", path);\n          }\n\n          map.on('viewreset', update);\n          update();\n        }\n        cb(err);\n      });\n  }\n\n  function showInfo(d, show) {\n    if (show) {\n      d3.select('#map-info').text(`Zipcode: ${d.properties.Zip_Code} cases:${d.active}  rate:${format(d.rate)}`);\n    } else {\n      d3.select('#map-info').text('');\n    }\n  }\n\n  function selectZipcode(d) {\n    d3.event.preventDefault();\n\n    let zipcode = d.properties.Zip_Code;\n    let active = selectedZipcodes.has(zipcode);\n    let add = false;\n\n    if (!d3.event.metaKey) {\n      selectedZipcodes.clear();\n      add = !active;\n    } else {\n      add  = !selectedZipcodes.delete(zipcode);\n    }\n\n    if (add) {\n      selectedZipcodes.add(zipcode);\n    }\n\n    svg.selectAll(\"path\").data(features)\n      .classed('selected', d => selectedZipcodes.has(d.properties.Zip_Code) );\n\n    if (selectedZipcodes.size > 0)\n      dimension.filter( d => selectedZipcodes.has(d));\n    else\n      dimension.filterAll();\n\n    patients.update(dimension);\n    postal.publish({channel: 'global', topic: 'render'});\n  }\n\n  function projectPoint(x, y) {\n    let point = map.latLngToLayerPoint(new L.LatLng(y, x));\n    this.stream.point(point.x, point.y);\n  }\n\n\n  function render() {\n    if (dirty) dirty = false;\n    else {\n      let active = new Map();\n      for(let z of dimension.group().top(Infinity)) {\n        active.set(z.key, z.value);\n      }\n\n      let list = [];\n      for(let f of features) {\n        f.active = active.get(f.properties.Zip_Code) || 0;\n        f.rate = f.active * f.pop_factor;\n        if (f.active) list.push(f);\n      }\n\n      let paths = svg.selectAll(\"path\")\n        .data(list, function (d) { return d.properties.Zip_Code;});\n\n      paths\n        .transition()\n        .duration(DURATION)\n        .style('fill-opacity', d => AREA_ALPHA )\n        .style('fill', function (d) { return colorScale(Math.min(d.rate, 1)); });\n\n      paths.exit()\n        .transition()\n        .duration(DURATION)\n          .style('fill-opacity', 0)\n          .style('fill', '#fff');\n    }\n  }\n\n  return {\n    init(cb) { init(cb); },\n\n    resize(w, h) {\n      width = w;\n      height = h;\n      svgContainer.attr(\"width\", w).attr(\"height\", h);\n      return this;\n    }\n  };\n}\n"]}